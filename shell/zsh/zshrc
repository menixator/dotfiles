
setopt NO_BEEP 

if [[ -z $TMUX ]]  &&  [ "$TERM" != "tmux-256color" ] && [ -z "$SUDO_USER" ]; then
  tmux attach || tmux && exit;
fi

# If you come from bash you might have to change your $PATH.

export PATH=$HOME/.bin:/usr/local/bin:$PATH


# Path to your oh-my-zsh installation.
  export ZSH=/home/menixator/.oh-my-zsh

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="robbyrussell"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='vim'
fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

alias wanip='dig +short myip.opendns.com @resolver1.opendns.com'

function lanip(){
  (for dev in $(ls /sys/class/net); do
    echo -n $dev " "
    net=$(ip -f inet addr show $dev | grep --color=never -Po 'inet \K[\d.]+?\/\d+')
    if [[ -n $net ]]; then
      echo -n $net
    else
      echo -n 'nil'
    fi
    echo -n "\t"
    mac=$(ip -f link addr show $dev | grep --color=never -Po 'link/[\w\d]+\s*\K[\da-f]{2}(:[\da-f]{2}){5}');

    if [[ -n $mac ]] && [ "$mac" != "00:00:00:00:00:00" ]; then
      echo -n  $mac
    else
      echo -n 'nil'
    fi
    echo
  done) | column -t
}


# ssh
export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

autoload -U history-search-end

zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end

bindkey "\e[A" history-beginning-search-backward-end
bindkey "\e[B" history-beginning-search-forward-end


source $HOME/.antigen/antigen.zsh
export NVM_LAZY_LOAD=true
antigen bundle lukechilds/zsh-nvm

HISTFILE="$HOME/.zsh_history"

HISTSIZE=10000000
SAVEHIST=10000000
setopt BANG_HIST                 # Treat the '!' character specially during expansion.
setopt EXTENDED_HISTORY          # Write the history file in the ":start:elapsed;command" format.
setopt INC_APPEND_HISTORY        # Write to the history file immediately, not when the shell exits.
# setopt SHARE_HISTORY             # Share history between all sessions.
setopt HIST_EXPIRE_DUPS_FIRST    # Expire duplicate entries first when trimming history.
setopt HIST_IGNORE_DUPS          # Don't record an entry that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS      # Delete old recorded entry if new entry is a duplicate.
setopt HIST_FIND_NO_DUPS         # Do not display a line previously found.
# setopt HIST_IGNORE_SPACE         # Don't record an entry starting with a space.
# setopt HIST_SAVE_NO_DUPS         # Don't write duplicate entries in the history file.
setopt HIST_REDUCE_BLANKS        # Remove superfluous blanks before recording entry.
setopt HIST_VERIFY               # Don't execute immediately upon history expansion.
# setopt HIST_BEEP                 # Beep when accessing nonexistent history.


export DEBUG=""



zmodload zsh/mathfunc


# Raw grep
alias xg='command grep -i'
alias xgp='command grep -i -P'

alias fucking='sudo'
alias gateway="route -n | xg -P "^0.0.0.0" | awk '{print \$2}'"

alias anon-trace='traceroute -n'
alias pong='ping -n'
alias gs="git status"

alias restart-networking="sudo service networking restart && echo Networking Restarted"
alias restart-network-manager="sudo service network-manager restart && echo Network-Manager Restarted"
alias restart-wpa-supplicant="sudo service wpa_supplicant restart && echo WPA-Supplicant Restarted"
alias refresh-network="restart-wpa-supplicant && restart-networking && restart-network-manager"


CDPATH=:..:~:~/projects:/mnt/data

export OUI=~/.std/oui

function ouilookup(){
  cat $OUI|grep --color=no $(echo $1|sed 's/://g'|cut -c1-6) | sed 's/[ \t]{1,}/\t/g' | awk -F'\t' '{print $3}'
}

alias beets='beet'

function gamma(){
  zenity --scale --print-partial --value=100 --text "Set new temperature value: (1000-25000)" --title "Redshift Scale"  2> /dev/null | (
   while IFS='' read -r val || [[ -n "$val" ]]; do
   newval=$((1000+(($val/100.0)*(25000-1000))))
   redshift -O $newval >> /dev/null
   done
   echo Final value is $newval
  )
}

LS_COLORS="di=34:ln=35:so=32:pi=33:ex=31:bd=34:cd=33:su=31:sg=32:tw=36:ow=35"
alias chrome="google-chrome"
